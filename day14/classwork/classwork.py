# 1. AND ოპერატორი - ორივე პირობა უნდა იყოს True
x = 10
y = 5

print(x > 5 and y < 10)  # True, რადგან ორივე პირობა (x > 5) და (y < 10) სწორი (True)
print(x > 15 and y < 10)  # False, რადგან პირველი პირობა (x > 15) არ არის სწორი (False)
print(x > 5 and y > 10)   # False, რადგან მეორე პირობა (y > 10) არ არის სწორი (False)

# 2. OR ოპერატორი - ერთ-ერთი პირობა უნდა იყოს True
print(x > 5 or y < 10)   # True, რადგან ერთი პირობა (x > 5) სწორია (True)
print(x > 15 or y < 10)  # True, რადგან მეორე პირობა (y < 10) სწორია (True)
print(x < 5 or y > 10)   # False, რადგან არც ერთი პირობა არ არის სწორი (False)

# 3. AND + OR ოპერატორების კომბინაცია - უფრო რთული ლოგიკური წინადადებები
# AND და OR ოპერატორების კომბინაციით შეგვიძლია შევქმნათ შედარებები.
print((x > 5 and y < 10) or (x == 10 and y != 5))  # True, პირველი ნაწილი (x > 5 and y < 10) არის True
print((x < 5 and y < 10) or (x == 10 and y != 10))  # True, მეორე ნაწილი (x == 10 and y != 10) არის True
print((x > 5 and y > 10) or (x == 10 and y < 5))    # False, არც ერთი ნაწილი არ არის სწორი

# 4. შეამოწმოთ ასაკი (age) და შეფასების პირობა (is_student)
age = 25
is_student = True

# AND: ორივე პირობა უნდა იყოს სწორი
print(age > 18 and is_student)  # True, რადგან ორივე პირობა სწორი (True)

# OR: ერთი პირობა საკმარისია
print(age > 18 or is_student)  # True, რადგან პირველი პირობა (age > 18) არის სწორი

# 5. ჩაწერეთ უფრო რთული წინადადება
x = 20
y = 10
z = 5

print((x > y and y > z) or (x == 20 and z == 5))  # True, ორივე ნაწილი მართებულია
print((x > y and y < z) or (x == 30 and z == 5))  # False, არც ერთი ნაწილი მართებულია

# 6. მიქსირებული შედარებები AND + OR
print((x == 20 and y != 10) or (z == 5 and y == 5))  # True, პირველი ნაწილი მართებულია
print((x == 20 and y == 10) or (z != 5 and y == 5))  # True, მეორე ნაწილი მართებულია
